using System;
					
public class Program
{
	// Reverse method - input: string // output: string
    public static string Reverse(string s)
    {
        char[] charArray = s.ToCharArray();
        Array.Reverse(charArray);
        return new string(charArray);
    }
	
	// SplitBy method - input: string, string // output: string array
    public static string[] SplitBy(string pattern, string word)
    {
		return word.Split(new string[] { pattern }, StringSplitOptions.None);
	}
	
	// FinalMessage method - input: string // output: void (no output)
	public static void FinalMessage(string message)
	{
		Console.WriteLine("You have a new text message: " + message);
	}
	
	public static void Main()
	{
        string message = Console.ReadLine();
		
		int index = 0;

        while(true) 
        {
            string operation  = Console.ReadLine();

            if (operation == "Reveal")
            {
                break;
            }

            string[] commands = SplitBy(":|:",  operation);

            switch(commands[0])
            {
                case "InsertSpace": 
                    index = int.Parse(commands[1]);
                    message = message.Insert(index, " ");
                    Console.WriteLine(message);
                    break;
                case "Reverse":
                    string pattern = commands[1];

                    if (message.Contains(pattern))
                    {
                        index = message.IndexOf(pattern);
						message = message.Remove(index, pattern.Length);
                        message += Reverse(pattern);
                    	Console.WriteLine(message);
                    }
                    else
                    {
                        Console.WriteLine("error");
                    }
                    break;
                case "ChangeAll":
                    string substr = commands[1];
                    string replacement = commands[2];

                    message = message.Replace(substr, replacement);
                    Console.WriteLine(message);
                    break;
            }
        }
		
        FinalMessage(message);
	}
}

